{"version":3,"sources":["./src/app/user-account/recap/recap.component.ts","./src/app/user-account/recap/recap.component.html","./src/app/user-account/header-form/header-form.component.ts","./src/app/user-account/header-form/header-form.component.html","./src/app/user-account/footer-form/footer-form.component.ts","./src/app/user-account/footer-form/footer-form.component.html","./src/app/user-account/form/form.component.ts","./src/app/user-account/form/form.component.html","./src/app/customvalidators.validator.ts","./src/app/customdirectives.directive.ts","./src/app/user-account/login/login.component.ts","./src/app/user-account/login/login.component.html","./src/app/user-account/user-account.module.ts","./src/app/user-account/user-account-routing.module.ts","./src/app/user.service.ts"],"names":[],"mappings":"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","file":"user-account-user-account-module-es2015.js","sourcesContent":["import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DelUser, LogOffUser, AddUser } from './../../../shared/actions/user-action';\r\nimport { UserService } from './../../user.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { UserState } from './../../../shared/states/user-state';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '@ngxs/store';\r\nimport { Component, EventEmitter, Input, OnInit, Output, Pipe, PipeTransform } from '@angular/core';\r\nimport { FormComponent } from '../form/form.component';\r\nimport { User } from '../../../shared/models/User';\r\nimport { ComparePassword } from 'src/app/customvalidators.validator';\r\n\r\n@Pipe({\r\n  name: 'phone'\r\n})\r\nexport class PhonePipe implements PipeTransform {\r\n  transform(rawNum) {\r\n    rawNum = rawNum.charAt(0) !== 0 ? rawNum.substring(1) : '' + rawNum.substring(1);\r\n    let newStr = '';\r\n    let i = 0;\r\n    for (; i < Math.floor(rawNum.length / 2) - 1; i++) {\r\n      newStr = newStr + rawNum.substr(i * 2, 2) + '-';\r\n    }\r\n\r\n    return newStr + rawNum.substr(i * 2);\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: 'callcode'\r\n})\r\nexport class CodePipe implements PipeTransform {\r\n  transform(country) {\r\n    switch(country) {\r\n      case 'fr' :\r\n        return '+33';\r\n        break;\r\n      case 'en' :\r\n        return '+44';\r\n        break;\r\n      case 'gr' :\r\n        return '+49';\r\n        break;\r\n      case 'us' :\r\n        return '+1';\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-recap',\r\n  templateUrl: './recap.component.html',\r\n  styleUrls: ['./recap.component.scss']\r\n})\r\n\r\nexport class RecapComponent implements OnInit {\r\n  user: User = new User();\r\n\r\n  form: FormGroup;\r\n\r\n  @Input () formValidate: boolean = false;\r\n  @Input () formModify: boolean = false;\r\n  public clickModify:boolean = false;\r\n  public clickDelete:boolean = false;\r\n  public errorSignIn: boolean = false;\r\n  public errorMessage: string = null;\r\n  user$: Observable<User>;\r\n\r\n  constructor(private store: Store, private userService: UserService, private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.formValidate)\r\n    {\r\n      this.store.select(UserState.getUser).subscribe(\r\n        (data) => {this.user = data;}\r\n      );\r\n    }\r\n  }\r\n  // @Input () userName: string;\r\n\r\n  onDelete(user: User): void {\r\n    this.userService.deleteUser(user).subscribe((response) => {\r\n      if(response.success) {\r\n        this.store.dispatch(new DelUser(user));\r\n        this.formValidate = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  onLogOff(user: User): void {\r\n    this.userService.logOffUser(user).subscribe((response) => {\r\n      if(response.success) {\r\n        this.store.dispatch(new LogOffUser(user));\r\n        this.formValidate = false;\r\n      }\r\n    })\r\n  }\r\n  onModifyAccount(user: User): void {\r\n       this.initForm();\r\n      this.formModify = true;\r\n      this.clickModify = true;\r\n  }\r\n  onClickDelete(): void {\r\n      this.clickDelete = true;\r\n      this.clickModify = true;\r\n  }\r\n\r\n  initForm(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n      firstname: [null, [\r\n        Validators.required,\r\n        Validators.pattern('^[A-Za-z]+$')]],\r\n      lastname: [null, [\r\n        Validators.required,\r\n        Validators.pattern('^[A-Za-z]+$')\r\n      ]],\r\n      city: [null, Validators.required],\r\n      zipcode: [null, [\r\n        Validators.pattern('^[0-9]+$'),\r\n        Validators.required,\r\n      ]\r\n    ],\r\n      phone: [null, [\r\n        Validators.pattern('^[0-9]+$'),\r\n        Validators.required,\r\n      ]],\r\n      address: [null, Validators.required],\r\n      login: [null, Validators.required],\r\n      mail: [null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$')\r\n        ]\r\n      ],\r\n      gender: [null, Validators.required],\r\n      country: [null, Validators.required],\r\n      password: [null, Validators.required],\r\n      confirmPassword: [null, Validators.required]\r\n    },\r\n    {\r\n      validator: ComparePassword('password', 'confirmPassword')\r\n    }\r\n    );\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n\r\n  isValidInput(fieldName): boolean {\r\n    return this.form.controls[fieldName].invalid &&\r\n      (this.form.controls[fieldName].dirty || this.form.controls[fieldName].touched);\r\n  }\r\n\r\n  modifyUser(event) {\r\n    event.preventDefault();\r\n    this.clickModify = true;\r\n    this.user.firstname = this.form.value.firstname;\r\n    if (this.form.valid) {\r\n      this.userService.updateUser(this.user).subscribe((response) => {\r\n        if(response.success)\r\n        {\r\n          this.store.dispatch(new AddUser(response.data));\r\n          this.formValidate=true;\r\n          this.formModify=false;\r\n          this.clickModify = false;\r\n\r\n        }\r\n        else {\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  return() {\r\n    this.formModify = false;\r\n    this.clickModify = false;\r\n  }\r\n}\r\n","<div *ngIf=\"formValidate\">\r\n    <div class=\"user-card\" [ngClass]=\"{'user-boy': user.gender == 'Man', 'user-girl':user.gender == 'Woman', 'user-other':user.gender == 'Other'}\">\r\n        <div class=\"user-card-header\">\r\n            <p>Welcome {{user.firstname}}, here's your account information!</p>\r\n        </div>\r\n        <div class=\"user-card-info\" *ngIf=\"!formModify\">\r\n            <div>\r\n                <p>{{user.firstname}} {{user.lastname}}\r\n                    <span *ngIf=\"user.gender == 'Man'\">♂\r\n         </span>\r\n                    <span *ngIf=\"user.gender == 'Woman'\">♀\r\n         </span>\r\n                    <span *ngIf=\"user.gender == 'Other'\">⚧\r\n                </span>\r\n                </p>\r\n                <p>{{user.login}}</p>\r\n                <p>{{user.mail}}</p>\r\n            </div>\r\n            <div class=\"user-card-address\">\r\n                <div>\r\n                    <p>{{user.address}}, {{user.city}}, {{user.zipcode}}</p>\r\n                    <p *ngIf=\"user.phone\"> {{user.country | callcode}} {{user.phone | phone }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"formModify\" [formGroup]=\"form\" (ngSubmit)=\"modifyUser($event)\">\r\n            <div class=\"c-input\">\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"lastname\">Lastname:</label>\r\n                    <input [(ngModel)]=\"user.lastname\" formControlName=\"lastname\" type=\"text\" id=\"lastname\" name=\"lastname\">\r\n                    <div *ccErrorInput=\"!isValidInput('lastname')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.lastname.errors && f.lastname.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.lastname.errors.pattern\">\r\n                  Must be a valid name format.\r\n                </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"firstname\">Firstname:</label>\r\n                    <input type=\"text\" [(ngModel)]=\"user.firstname\" formControlName=\"firstname\" id=\"firstname\" name=\"firstname\">\r\n                    <div *ngIf=\"isValidInput('firstname')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors && f.firstname.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors.pattern\">\r\n                Must be a valid name format.\r\n              </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"gender\">Gender:</label>\r\n                    <select [(ngModel)]=\"user.gender\" formControlName=\"gender\" id=\"gender\" name=\"gender\">\r\n              <option value=\"Man\" selected>M</option>\r\n              <option value=\"Woman\">F</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n                    <div *ngIf=\"isValidInput('firstname')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors && f.firstname.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors.pattern\">\r\n                Must be a valid name format.\r\n              </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class=\"c-input\">\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"name\">City:</label>\r\n                    <input formControlName=\"city\" [(ngModel)]=\"user.city\" type=\"text\" id=\"city\" name=\"namcitye\">\r\n                    <div *ngIf=\"isValidInput('city')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.city.errors && f.city.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.city.errors.pattern\">\r\n                  Must be a valid city format.\r\n                </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"name\">Zipcode (5 char):</label>\r\n                    <input formControlName=\"zipcode\" [(ngModel)]=\"user.zipcode\" type=\"text\" id=\"zip\" name=\"zip\" minlength=\"5\" maxlength=\"5\" size=\"5\">\r\n                    <div *ngIf=\"isValidInput('zipcode')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.zipcode.errors && f.zipcode.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.zipcode.errors.pattern\">\r\n                  Must be a valid zipcode format.\r\n                </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"address\">Address:</label>\r\n                <input formControlName=\"address\" [(ngModel)]=\"user.address\" type=\"text\" id=\"address\" name=\"address\">\r\n                <div *ngIf=\"isValidInput('address')\">\r\n                    <span class=\"err-input\" *ngIf=\"f.address.errors && f.address.errors.required\">Required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.address.errors.pattern\">\r\n                Must be a valid address format.\r\n              </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"phone\">Phone number:</label>\r\n                <div>\r\n                    <select [(ngModel)]=\"user.country\" formControlName=\"country\" id=\"country\" name=\"country\">\r\n                <option value=\"fr\" selected>fr</option>\r\n                <option value=\"en\" >en</option>\r\n                <option value=\"us\">us</option>\r\n                <option value=\"gr\">gr</option>\r\n              </select>\r\n                    <input formControlName=\"phone\" [(ngModel)]=\"user.phone\" type=\"text\" id=\"phone\" name=\"phone\" maxlength=\"10\">\r\n                    <div *ngIf=\"isValidInput('phone')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.phone.errors && f.phone.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.phone.errors.pattern\">\r\n                    Must be a valid phone format.\r\n                  </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separator\"></div>\r\n\r\n            <div class=\"c-input-one\">\r\n                <label for=\"mail\">Login :</label>\r\n                <input formControlName=\"login\" [(ngModel)]=\"user.login\" type=\"text\" id=\"login\" name=\"login\">\r\n                <div *ngIf=\"isValidInput('login')\">\r\n                    <span class=\"err-input\" *ngIf=\"f.login.errors && f.login.errors.required\">Required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.login.errors.pattern\">\r\n              Must be a valid login format.\r\n            </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"mail\">Mail :</label>\r\n                <input formControlName=\"mail\" [(ngModel)]=\"user.mail\" type=\"text\" id=\"mail\" name=\"mail\">\r\n                <div *ngIf=\"isValidInput('mail')\">\r\n                    <span class=\"err-input\" *ngIf=\"f.mail.errors && f.mail.errors.required\">Required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.mail.errors.pattern\">\r\n                Must be a valid mail format.\r\n              </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"pass\">Password:</label>\r\n                <input formControlName=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"password\" name=\"password\">\r\n                <div *ngIf=\"isValidInput('password')\">\r\n                    <div *ngIf=\"f.password.errors &&  f.password.errors.required\">Required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"confirm-pass\">Confirm password:</label>\r\n                <input type=\"password\" id=\"confirm-pass\" name=\"confirm-pass\" formControlName=\"confirmPassword\" required>\r\n                <div *ngIf=\"isValidInput('confirmPassword')\">\r\n                    <span class=\"err-input\" *ngIf=\"!f.confirmPassword && f.confirmPassword.errors.required\">Confirmation password is required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords should match</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separator\"></div>\r\n\r\n            <div class=\"c-input btn-container\">\r\n                <button class=\"user-btn-btn\" *ngIf=\"!waiting\" type=\"submit\" value=\"Modifier\" [disabled]=\"!form.valid\">\r\n                    Update\r\n                </button>\r\n                <button class=\"user-btn-btn\" *ngIf=\"!waiting\" (click)=\"return()\" value=\"Modifier\">\r\n                    Return\r\n                </button>\r\n                <i *ngIf=\"waiting\" class=\"fa fa-spin fa-spinner\" aria-hidden=\"true\"></i>\r\n                <div *ngIf=\"errorSignIn\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> {{errorMessage}}</div>\r\n\r\n            </div>\r\n        </form>\r\n\r\n\r\n        <div class=\"user-card-ok\">\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"!clickModify\" class=\"user-btn-cnt\">\r\n        <button class=\"user-btn-btn\" (click)=\"onLogOff(user)\" value=\"Logoff\">\r\n            Log Off\r\n        </button>\r\n        <button class=\"user-btn-btn\" (click)=\"onModifyAccount(user)\" value=\"Logoff\">\r\n            Update Account\r\n        </button>\r\n        <button class=\"user-btn-btn\" (click)=\"onClickDelete()\" value=\"Supprimer\">\r\n            Delete account\r\n        </button>\r\n    </div>\r\n    <div *ngIf=\"clickDelete\" class=\"user-btn-cnt\">\r\n        <button class=\"user-btn-btn\" (click)=\"onDelete(user)\" value=\"Supprimer\">\r\n            Confirm delete\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-form',\r\n  templateUrl: './header-form.component.html',\r\n  styleUrls: ['./header-form.component.scss']\r\n})\r\nexport class HeaderFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"header\">\r\n    <h2>Sign in</h2>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer-form',\r\n  templateUrl: './footer-form.component.html',\r\n  styleUrls: ['./footer-form.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"footer-bar\">\r\n</div>\r\n\r\n","import { UserStateModel } from './../../../shared/states/user-state-model';\r\nimport { UserState } from './../../../shared/states/user-state';\r\nimport { AddUser } from './../../../shared/actions/user-action';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { UserService } from './../../user.service';\r\nimport { getLocaleDirection } from '@angular/common';\r\nimport { Component, Pipe, Directive, ElementRef, EventEmitter, Input, OnInit, Output, PipeTransform } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators, ReactiveFormsModule, Form } from '@angular/forms';\r\nimport {\r\n  ComparePassword,\r\n  ValidateString\r\n} from '../../customvalidators.validator';\r\n\r\nimport {\r\n  ErrorInputDirective,\r\n} from './../../customdirectives.directive';\r\nimport { User } from '../../../shared/models/User';\r\nimport { ɵEmptyOutletComponent } from '@angular/router';\r\nimport { cpuUsage } from 'process';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  // class:'component-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n  host: {'id':'component-form'},\r\n})\r\n\r\n\r\nexport class FormComponent implements OnInit, Validators {\r\n  public user = new User();\r\n\r\n  public user$: Subject<User[]> = new ReplaySubject<User[]>(1);\r\n\r\n  form: FormGroup;\r\n  public formValidate: boolean = false;\r\n  public formModify: boolean = false;\r\n  public errorSignIn: boolean = false;\r\n  public errorMessage: string = null;\r\n  public waiting: boolean = false;\r\n\r\n  userTab: User[] = [];\r\n  logged: User = new User();\r\n  currentUser$: Observable<User>;\r\n\r\n  // @Input() userName: string = this.user.firstname;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService, private userstore: Store) {\r\n    // this.user.gender = 'Man';\r\n    // this.user.country = 'fr';\r\n    // this.user.firstname = 'Baptiste';\r\n    // this.user.lastname = 'Steinmetz';\r\n    // this.user.mail = 'baptiste@mail.mail';\r\n    // this.user.phone = '0619735555';\r\n    // this.user.login = 'baptiste67';\r\n    // this.user.password = 'baptiste';\r\n    // this.user.address = '1 rue saint léon';\r\n    // this.user.zipcode = '67700';\r\n    // this.user.city = 'saverne';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    // don't want another route, the account should always lead to current user once he has submitted form\r\n    this.userstore.select(UserState.getUser).subscribe((data) => {\r\n      if (JSON.stringify(data) !== JSON.stringify({})) {\r\n        this.formValidate=true;\r\n      }\r\n      if(!data) this.formValidate = false;\r\n    });\r\n  }\r\n\r\n  initForm(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n      firstname: [null, [\r\n        Validators.required,\r\n        Validators.pattern('^[A-Za-z]+$')]],\r\n      lastname: [null, [\r\n        Validators.required,\r\n        Validators.pattern('^[A-Za-z]+$')\r\n      ]],\r\n      city: [null, Validators.required],\r\n      zipcode: [null, [\r\n        Validators.pattern('^[0-9]+$'),\r\n        Validators.required,\r\n      ]\r\n    ],\r\n      phone: [null, [\r\n        Validators.pattern('^[0-9]+$'),\r\n        Validators.required,\r\n      ]],\r\n      address: [null, Validators.required],\r\n      login: [null, Validators.required],\r\n      mail: [null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$')\r\n        ]\r\n      ],\r\n      gender: [null, Validators.required],\r\n      country: [null, Validators.required],\r\n      password: [null, Validators.required],\r\n      confirmPassword: [null, Validators.required]\r\n    },\r\n    {\r\n      validator: ComparePassword('password', 'confirmPassword')\r\n    }\r\n    );\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n\r\n  isValidInput(fieldName): boolean {\r\n    return this.form.controls[fieldName].invalid &&\r\n      (this.form.controls[fieldName].dirty || this.form.controls[fieldName].touched);\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    this.waiting = true;\r\n    this.user.firstname = this.form.value.firstname;\r\n    if (this.form.valid) {\r\n      this.userService.addUser(this.user).subscribe((response) => {\r\n        if(response.success)\r\n        {\r\n          this.userstore.dispatch(new AddUser(response.data));\r\n          this.formValidate=true;\r\n          this.waiting = false;\r\n        }\r\n        else {\r\n          this.waiting = false;\r\n          this.errorSignIn = true;\r\n          this.errorMessage = response.data;\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n}\r\n","<!-- <p>form works!</p>  -->\r\n<!-- <span> {{ user.firstname }} </span> -->\r\n<div id=\"section-main\">\r\n    <div id=\"section-form\" *ngIf=\"!formValidate\" (formValidate)=\"formValidate = $event\">\r\n        <app-header-form></app-header-form>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit($event)\">\r\n            <div class=\"c-input\">\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"lastname\">Lastname:</label>\r\n                    <input [(ngModel)]=\"user.lastname\" formControlName=\"lastname\" type=\"text\" id=\"lastname\" name=\"lastname\">\r\n                    <div *ccErrorInput=\"!isValidInput('lastname')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.lastname.errors && f.lastname.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.lastname.errors.pattern\">\r\n                  Must be a valid name format.\r\n                </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"firstname\">Firstname:</label>\r\n                    <input type=\"text\" [(ngModel)]=\"user.firstname\" formControlName=\"firstname\" id=\"firstname\" name=\"firstname\">\r\n                    <div *ngIf=\"isValidInput('firstname')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors && f.firstname.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors.pattern\">\r\n                Must be a valid name format.\r\n              </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"gender\">Gender:</label>\r\n                    <select [(ngModel)]=\"user.gender\" formControlName=\"gender\" id=\"gender\" name=\"gender\">\r\n              <option value=\"Man\" selected>M</option>\r\n              <option value=\"Woman\">F</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n                    <div *ngIf=\"isValidInput('firstname')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors && f.firstname.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.firstname.errors.pattern\">\r\n                Must be a valid name format.\r\n              </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class=\"c-input\">\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"name\">City:</label>\r\n                    <input formControlName=\"city\" [(ngModel)]=\"user.city\" type=\"text\" id=\"city\" name=\"namcitye\">\r\n                    <div *ngIf=\"isValidInput('city')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.city.errors && f.city.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.city.errors.pattern\">\r\n                  Must be a valid city format.\r\n                </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"c-input-one\">\r\n                    <label for=\"name\">Zipcode (5 char):</label>\r\n                    <input formControlName=\"zipcode\" [(ngModel)]=\"user.zipcode\" type=\"text\" id=\"zip\" name=\"zip\" minlength=\"5\" maxlength=\"5\" size=\"5\">\r\n                    <div *ngIf=\"isValidInput('zipcode')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.zipcode.errors && f.zipcode.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.zipcode.errors.pattern\">\r\n                  Must be a valid zipcode format.\r\n                </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"address\">Address:</label>\r\n                <input formControlName=\"address\" [(ngModel)]=\"user.address\" type=\"text\" id=\"address\" name=\"address\">\r\n                <div *ngIf=\"isValidInput('address')\">\r\n                    <span class=\"err-input\" *ngIf=\"f.address.errors && f.address.errors.required\">Required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.address.errors.pattern\">\r\n                Must be a valid address format.\r\n              </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"phone\">Phone number:</label>\r\n                <div>\r\n                    <select [(ngModel)]=\"user.country\" formControlName=\"country\" id=\"country\" name=\"country\">\r\n                <option value=\"fr\" selected>fr</option>\r\n                <option value=\"en\" >en</option>\r\n                <option value=\"us\">us</option>\r\n                <option value=\"gr\">gr</option>\r\n              </select>\r\n                    <input formControlName=\"phone\" [(ngModel)]=\"user.phone\" type=\"text\" id=\"phone\" name=\"phone\" maxlength=\"10\">\r\n                    <div *ngIf=\"isValidInput('phone')\">\r\n                        <span class=\"err-input\" *ngIf=\"f.phone.errors && f.phone.errors.required\">Required</span>\r\n                        <span class=\"err-input\" *ngIf=\"f.phone.errors.pattern\">\r\n                    Must be a valid phone format.\r\n                  </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separator\"></div>\r\n\r\n            <div class=\"c-input-one\">\r\n                <label for=\"mail\">Login :</label>\r\n                <input formControlName=\"login\" [(ngModel)]=\"user.login\" type=\"text\" id=\"login\" name=\"login\">\r\n                <div *ngIf=\"isValidInput('login')\">\r\n                    <span class=\"err-input\" *ngIf=\"f.login.errors && f.login.errors.required\">Required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.login.errors.pattern\">\r\n              Must be a valid login format.\r\n            </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"mail\">Mail :</label>\r\n                <input formControlName=\"mail\" [(ngModel)]=\"user.mail\" type=\"text\" id=\"mail\" name=\"mail\">\r\n                <div *ngIf=\"isValidInput('mail')\">\r\n                    <span class=\"err-input\" *ngIf=\"f.mail.errors && f.mail.errors.required\">Required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.mail.errors.pattern\">\r\n                Must be a valid mail format.\r\n              </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"pass\">Password:</label>\r\n                <input formControlName=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"password\" name=\"password\">\r\n                <div *ngIf=\"isValidInput('password')\">\r\n                    <div *ngIf=\"f.password.errors &&  f.password.errors.required\">Required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"c-input-one\">\r\n                <label for=\"confirm-pass\">Confirm password:</label>\r\n                <input type=\"password\" id=\"confirm-pass\" name=\"confirm-pass\" formControlName=\"confirmPassword\" required>\r\n                <div *ngIf=\"isValidInput('confirmPassword')\">\r\n                    <span class=\"err-input\" *ngIf=\"!f.confirmPassword && f.confirmPassword.errors.required\">Confirmation password is required</span>\r\n                    <span class=\"err-input\" *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords should match</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separator\"></div>\r\n\r\n            <div class=\"c-input btn-container\">\r\n                <button *ngIf=\"!waiting\" type=\"submit\" class=\"validate\" value=\"Valider\" [disabled]=\"!form.valid\">\r\n              Submit\r\n            </button>\r\n                <i *ngIf=\"waiting\" class=\"fa fa-spin fa-spinner\" aria-hidden=\"true\"></i>\r\n            </div>\r\n        </form>\r\n\r\n        <app-footer-form>\r\n            <div *ngIf=\"errorSignIn\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> {{errorMessage}}</div>\r\n        </app-footer-form>\r\n    </div>\r\n    <div id=\"section-log-in\" *ngIf=\"!formValidate\">\r\n        <app-login></app-login>\r\n    </div>\r\n    <div *ngIf=\"formValidate\" id=\"section-recap\">\r\n        <app-recap [formValidate]=\"formValidate\"></app-recap>\r\n    </div>\r\n</div>","import { FormGroup, AbstractControl } from '@angular/forms';\r\n\r\n// To validate password and confirm password\r\nexport function ComparePassword(\r\n  controlName: string,\r\n  matchingControlName: string\r\n) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      return;\r\n    }\r\n\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ mustMatch: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n\r\nexport function ValidateString(str: string) {\r\n  if (str.match('/^[A-Z]+$/i') ) {\r\n    return { validString: true };\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n","import { element } from 'protractor';\r\nimport { Directive, Input, TemplateRef, ViewContainerRef, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ccErrorInput]'\r\n})\r\n\r\nexport class ErrorInputDirective {\r\n\r\n  // ErrClass: boolean = false;\r\n\r\n  constructor(private templateRef: TemplateRef<any>,\r\n              private viewContainer: ViewContainerRef,\r\n              private renderer: Renderer2,\r\n              private el: ElementRef) {}\r\n\r\n  @Input() set ccErrorInput(condition: boolean){\r\n    if (!condition){\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n    }\r\n    else {\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n\r\n}\r\n","import { User } from './../../../shared/models/User';\r\nimport { AddUser } from './../../../shared/actions/user-action';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { UserService } from './../../user.service';\r\nimport { ApiService } from './../../api.service';\r\nimport { getLocaleDirection } from '@angular/common';\r\nimport { Component, Pipe, Directive, ElementRef, EventEmitter, Input, OnInit, Output, PipeTransform } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators, ReactiveFormsModule, Form } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  public password: string;\r\n  public login: string;\r\n  public logged: boolean = false;\r\n  public waiting: boolean = false;\r\n  public errorLogIn :boolean = false;\r\n  public errorMessage:string = null;\r\n  public loggedUser:User = new User();\r\n\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService, private apiService: ApiService, private userstore: Store) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      login: [null, Validators.required],\r\n      password: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit(event)\r\n  {\r\n    this.waiting = true;\r\n    this.errorLogIn = false;\r\n    this.apiService.setJWT();\r\n    this.userService.logUser(this.login, this.password).subscribe((response) => {\r\n      // add user to connect store\r\n      if(response.success == true) {\r\n        this.loggedUser = response.data;\r\n        this.userstore.dispatch(new AddUser(this.loggedUser));\r\n        this.errorMessage = null;\r\n      }\r\n      else {\r\n        this.waiting = false;\r\n        this.login = null;\r\n        this.password = null;\r\n        this.errorLogIn = true;\r\n        this.errorMessage = response.data;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit($event)\" *ngIf=\"!this.logged\">\r\n    <div class=\"header\">\r\n        <h2>Login</h2>\r\n    </div>\r\n    <div class=\"c-input-one\">\r\n        <label for=\"mail\">Login :</label>\r\n        <input formControlName=\"login\" [(ngModel)]=\"login\" type=\"text\" id=\"login\" name=\"login\">\r\n\r\n    </div>\r\n    <div class=\"c-input\">\r\n\r\n        <div class=\"c-input-one\">\r\n            <label for=\"pass\">Password:</label>\r\n            <input formControlName=\"password\" [(ngModel)]=\"password\" type=\"password\" id=\"password\" name=\"password\">\r\n\r\n        </div>\r\n        <div class=\"separator\"></div>\r\n\r\n        <div class=\"c-input btn-container\">\r\n            <button type=\"submit\" *ngIf=\"!waiting\" class=\"validate\" value=\"Valider\" [disabled]=\"!form.valid\">\r\n                Submit\r\n            </button>\r\n            <i *ngIf=\"waiting\" class=\"fa fa-spin fa-spinner\" aria-hidden=\"true\"></i>\r\n\r\n        </div>\r\n        <div class=\"footer\">\r\n            <div *ngIf=\"errorLogIn\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> {{errorMessage}}</div>\r\n        </div>\r\n    </div>\r\n</form>","import { LoginComponent } from './login/login.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserAccountRoutingModule } from './user-account-routing.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppModule } from './../app.module';\r\nimport { ErrorInputDirective } from './../customdirectives.directive';\r\nimport { RecapComponent, PhonePipe, CodePipe } from './../user-account/recap/recap.component';\r\nimport { FormComponent } from './../user-account/form/form.component';\r\nimport { FooterComponent } from './../user-account/footer-form/footer-form.component';\r\nimport { HeaderFormComponent } from './header-form/header-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FooterComponent,\r\n    FormComponent,\r\n    HeaderFormComponent,\r\n    RecapComponent,\r\n    LoginComponent,\r\n    ErrorInputDirective,\r\n    PhonePipe,\r\n    CodePipe,\r\n  ],\r\n  imports: [\r\n    // AppModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UserAccountRoutingModule\r\n  ],\r\n  providers: [],\r\n  // bootstrap: [AppComponent]\r\n})\r\n\r\n\r\nexport class UserAccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormComponent } from './form/form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FormComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserAccountRoutingModule { }\r\n","import { environment } from './../environments/environment';\r\nimport { ApiService } from './api.service';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { HttpClientModule, HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { User } from '../shared/models/User';\r\nimport { Observable, of, ReplaySubject, Subject, throwError } from 'rxjs';\r\nimport { catchError, tap, map, filter} from 'rxjs/operators';\r\n\r\n@Injectable(\r\n  {\r\n  providedIn: 'root'\r\n  }\r\n)\r\nexport class UserService extends ApiService {\r\n  constructor(private hClient: HttpClient) {\r\n    super(hClient);\r\n   }\r\n\r\n  private users: User[];\r\n\r\n  public addUser(u: User): Observable<any> {\r\n    const  body = new URLSearchParams();\r\n    body.set('firstname', u.firstname);\r\n    body.set('lastname', u.lastname);\r\n    body.set('address', u.address);\r\n    body.set('zipcode', u.zipcode);\r\n    body.set('city', u.city);\r\n    body.set('gender', u.gender);\r\n    body.set('mail', u.mail);\r\n    body.set('password', u.password);\r\n    body.set('login', u.login);\r\n    body.set('country', u.country);\r\n    body.set('phone', u.phone);\r\n\r\n    return this.hClient.post<any>(environment.api + '/user/register', body.toString(), this.httpOptions).pipe(\r\n      map((response) =>\r\n      response\r\n     )\r\n    );\r\n  }\r\n  public updateUser(u: User): Observable<any> {\r\n    const  body = new URLSearchParams();\r\n    body.set('idUser', u.idUser.toString());\r\n    body.set('firstname', u.firstname);\r\n    body.set('lastname', u.lastname);\r\n    body.set('address', u.address);\r\n    body.set('zipcode', u.zipcode);\r\n    body.set('city', u.city);\r\n    body.set('gender', u.gender);\r\n    body.set('mail', u.mail);\r\n    body.set('password', u.password);\r\n    body.set('login', u.login);\r\n    body.set('country', u.country);\r\n    body.set('phone', u.phone);\r\n\r\n    return this.hClient.post<any>(environment.api + '/user/update', body.toString(), this.httpOptions).pipe(\r\n      map((response) => response)\r\n    );\r\n  }\r\n  public deleteUser(u: User): Observable<any> {\r\n    const  body = new URLSearchParams();\r\n    body.set('idUser', u.idUser.toString());\r\n\r\n    return this.hClient.post<any>(environment.api + '/user/delete', body.toString(), this.httpOptions).pipe(\r\n      map((response) => response)\r\n    );\r\n  }\r\n\r\n  public logUser(log: string, pwd: string) : Observable<any> {\r\n    const  body = new URLSearchParams();\r\n    body.set('login', log);\r\n    body.set('password',pwd);\r\n    return this.hClient.post<any>(environment.api + '/user/login', body.toString(), this.httpOptions).pipe(\r\n      tap((response) => response)\r\n    );\r\n  }\r\n\r\n  public logOffUser(u: User) : Observable<any> {\r\n    const  body = new URLSearchParams();\r\n    body.set('idUser', u.idUser.toString());\r\n    return this.hClient.post<any>(environment.api + '/user/logoff', body.toString(), this.httpOptions).pipe(\r\n      map((response) => response)\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}