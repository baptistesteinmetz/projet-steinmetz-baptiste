{"version":3,"sources":["webpack:///src/app/product-detail/product-detail.module.ts","webpack:///src/app/get-products.service.ts","webpack:///src/app/product-detail/product-detail-routing.module.ts","webpack:///src/app/product-detail/product-detail.component.ts","webpack:///src/app/product-detail/product-detail.component.html","webpack:///src/app/api.service.ts"],"names":["ProductDetailModule","declarations","imports","providers","ProductService","hClient","filteredProducts$","products","get","api","pipe","data","next","asObservable","searchTerm","getProducts","filter","product","isNaN","parseFloat","price","toString","includes","name","toLowerCase","description","id","status","sort","a","b","body","URLSearchParams","forEach","set","post","httpOptions","providedIn","routes","path","component","ProductDetailRoutingModule","forChild","exports","src","ProductDetailComponent","productService","route","router","store","loaded","addProduct","dispatch","snapshot","params","product$","getSingleProduct","subscribe","singleProduct","selector","templateUrl","styleUrls","ApiService","http","headers","append","tokenParse"],"mappings":"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","file":"product-detail-product-detail-module-es5.js","sourcesContent":["import { RouterModule } from '@angular/router';\r\nimport { ProductDetailRoutingModule } from './product-detail-routing.module';\r\nimport { AppModule } from './../app.module';\r\nimport { ProductDetailComponent } from './product-detail.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePipe, CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductDetailComponent,\r\n  ],\r\n  imports: [\r\n    // NgxsModule,\r\n    // NgxsModule.forRoot([\r\n    //   ProductState\r\n    // ]),\r\n    // RouterModule.forRoot(appRoutes),\r\n    // AppModule\r\n    CommonModule,\r\n    RouterModule,\r\n    ProductDetailRoutingModule,\r\n  ],\r\n  providers: [],\r\n  // bootstrap: [AppComponent]\r\n})\r\nexport class ProductDetailModule { }\r\n","import { ApiService } from './api.service';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { HttpClientModule, HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Product } from '../shared/models/products';\r\nimport { Observable, of, ReplaySubject, Subject, throwError } from 'rxjs';\r\nimport { environment } from '../environments/environment';\r\nimport { catchError, tap, map, filter} from 'rxjs/operators';\r\n@Injectable(\r\n  {\r\n  providedIn: 'root'\r\n  }\r\n)\r\nexport class ProductService extends ApiService {\r\n\r\n  constructor(private hClient: HttpClient) {\r\n    super(hClient);\r\n   }\r\n\r\n  private products: Product[];\r\n  private filteredProducts$: Subject<Product[]> = new ReplaySubject<Product[]>(1);\r\n\r\n  public getProducts(): Observable<Product[]> {\r\n    // return cached products\r\n    if (this.products) {\r\n      return of(this.products);\r\n    }\r\n    // fetch and cache products\r\n    return this.hClient.get(environment.api + '/product/all').pipe(\r\n      tap((data : any) => {\r\n        this.products = data.data;\r\n        this.filteredProducts$.next(this.products);\r\n      }\r\n      )\r\n    );\r\n  }\r\n\r\n  getSearchResults(): Observable<Product[]> {\r\n    return this.filteredProducts$.asObservable();\r\n  }\r\n\r\n  searchProduct(searchTerm: any): Observable<void> {\r\n    return this.getProducts().pipe(\r\n      // using tap to update the stream without changing any data\r\n      tap((products: any) => {\r\n        products = products.filter(product => {\r\n          if(!isNaN(parseFloat(searchTerm)))\r\n          {\r\n            return product.price.toString().includes(searchTerm.toString());\r\n          }\r\n          else {\r\n            return product.name.toLowerCase().includes(searchTerm) || product.description.toLowerCase().includes(searchTerm)\r\n          }\r\n        });\r\n        // updating the stream\r\n        this.filteredProducts$.next(products);\r\n      }),\r\n      map(() => void 0)\r\n    );\r\n  }\r\n\r\n  public getSingleProduct(id): Observable<any> {\r\n    return this.hClient.get(environment.api + '/product/' + id).pipe(\r\n      tap((data : Product) => {\r\n        this.products = data[0];\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n\r\n  priceFilter(status: number): Observable<any[]> {\r\n    return this.getProducts().pipe(\r\n      tap((products : any) => {\r\n        products = products.sort((a,b) => {\r\n          switch (status) {\r\n            case 0:\r\n              return a.price < b.price ? -1 : 1;\r\n              break;\r\n            case 1:\r\n              return a.price > b.price ? -1 : 1;\r\n              break;\r\n            }\r\n        });\r\n        this.filteredProducts$.next(products);\r\n      }\r\n      ),\r\n      map(() => void 0)\r\n      );\r\n  }\r\n\r\n  nameFilter(status : number): Observable<any[]> {\r\n    return this.getProducts().pipe(\r\n      tap((products : any) => {\r\n        products = products.sort((a,b) => {\r\n          switch(status) {\r\n            case 0:\r\n              return a.name < b.name  ? -1 : 1;\r\n              break;\r\n            case 1:\r\n              return a.name > b.name ? -1 : 1;\r\n              break;\r\n          }\r\n        });\r\n        this.filteredProducts$.next(products);\r\n      }),\r\n      map(() => void 0)\r\n    );\r\n  }\r\n\r\n\r\n  buyProducts(products: Product[]) : Observable<any> {\r\n    const  body = new URLSearchParams();\r\n    let price = 0;\r\n    products.forEach(product => {\r\n      price += product.price;\r\n    })\r\n    body.set(\"price\", price.toString());\r\n    return this.hClient.post(environment.api + '/product/buy',body.toString(), this.httpOptions).pipe(\r\n      map((data) => data)\r\n    );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProductDetailComponent } from './product-detail.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductDetailComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductDetailRoutingModule { }\r\n","import { AddProduct } from './../../shared/actions/product-action';\r\nimport { filter, tap } from 'rxjs/operators';\r\nimport { ProductService } from './../get-products.service';\r\nimport { ProductState } from './../../shared/states/product-state';\r\nimport { Observable } from 'rxjs';\r\nimport { State, Store } from '@ngxs/store';\r\nimport { Product } from './../../shared/models/products';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-detail',\r\n  templateUrl: './product-detail.component.html',\r\n  styleUrls: ['./product-detail.component.scss']\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n\r\n  product$: Observable<Product>;\r\n  singleProduct: Product;\r\n  loaded : boolean = false;\r\n\r\n  constructor(private productService: ProductService, private route: ActivatedRoute, private router: Router, private store: Store) {\r\n\r\n   }\r\n\r\n  onClickAdd(product: Product) {\r\n    this.addProduct(product);\r\n  }\r\n\r\n  addProduct(product: Product) {\r\n      this.store.dispatch(new AddProduct(product));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let id = this.route.snapshot.params.id;\r\n    this.product$ = this.productService.getSingleProduct(id);\r\n    this.productService.getSingleProduct(id).subscribe((product) => {\r\n      this.loaded = true;\r\n      this.singleProduct = product.data;\r\n    });\r\n  }\r\n\r\n}\r\n","<section *ngIf=\"loaded\" class=\"detail-product\" style.boxShadow=\"-5px 0px 10px 2px {{singleProduct?.primary_color}}99\">\r\n    <div class=\"detail-img\">\r\n        <img class=\"product-img\" src=\"../assets/img/{{singleProduct?.src}}\" />\r\n    </div>\r\n    <div class=\"detail-info\">\r\n        <div class=\"detail-info-main\">\r\n            <h2> {{singleProduct?.name}} - <span>{{singleProduct?.platform}}</span></h2>\r\n            <div class=\"info-price info\">\r\n                <p>Price: </p>\r\n                <p class=\"info-dynamic\"> {{singleProduct?.price}}€</p>\r\n            </div>\r\n            <div class=\"info-desc info\">\r\n                <p>Descrition: </p>\r\n                <p class=\"info-dynamic\"> {{singleProduct?.description}}</p>\r\n            </div>\r\n            <div class=\"info-date info\">\r\n                <p>Release date: </p>\r\n                <p class=\"info-dynamic\"> {{ singleProduct?.release_date }}</p>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"info-action\">\r\n            <button class=\"product-buy-btn btn-product\" (click)=\"onClickAdd(singleProduct)\" [style.background]=\"singleProduct?.secondary_color\">Add to cart <i class=\"fa fa-cart-plus\" aria-hidden=\"true\"></i></button>\r\n\r\n            <div class=\"info-action-route\">\r\n                <a class=\"btn-product\" [style.background]=\"singleProduct?.primary_color\" routerLink=\"/products\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i><span>Back</span></a>\r\n                <a class=\"btn-product\" [style.background]=\"singleProduct?.primary_color\" routerLink=\"/cart\"><span>Go to cart</span><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { environment } from './../environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable(\r\n  {\r\n  providedIn: 'root'\r\n  }\r\n)\r\n\r\nexport class ApiService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders(\r\n      {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      })\r\n  };\r\n\r\n  public tokenParse;\r\n\r\n  public setJWT(){\r\n    this.httpOptions.headers.append('Authorization', `Bearer ${this.tokenParse}`);\r\n  }\r\n\r\n}\r\n"]}